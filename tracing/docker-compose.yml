version: '3.8'

services:
  jaeger:
    image: jaegertracing/all-in-one:1.54
    container_name: jaeger
    restart: always
    ports:
      - "10004:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger HTTP collector
      - "14250:14250"  # Jaeger gRPC collector
      - "6831:6831/udp"  # Jaeger agent UDP
      - "6832:6832/udp"  # Jaeger agent UDP
      - "5778:5778"   # Jaeger agent HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_TAGS_AS_FIELDS_ALL=true
      - ES_NUM_SHARDS=1
      - ES_NUM_REPLICAS=0
      - LOG_LEVEL=info
    networks:
      - tracing-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: jaeger-elasticsearch
    restart: always
    environment:
      - node.name=jaeger-elasticsearch
      - cluster.name=jaeger-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - jaeger_elasticsearch_data:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9201:9200"  # Elasticsearch for Jaeger (다른 포트 사용)
    networks:
      - tracing-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.54
    container_name: jaeger-agent
    restart: always
    command: 
      - "--reporter.grpc.host-port=jaeger:14250"
      - "--reporter.grpc.retry.max=3"
      - "--agent.tags=deployment.name=jaeger-agent,host.ip=${HOST_IP:-127.0.0.1}"
    ports:
      - "6833:6831/udp"  # Agent UDP (다른 포트)
      - "6834:6832/udp"  # Agent UDP (다른 포트)
      - "5779:5778"      # Agent HTTP (다른 포트)
    networks:
      - tracing-net
    depends_on:
      - jaeger

  jaeger-query:
    image: jaegertracing/jaeger-query:1.54
    container_name: jaeger-query
    restart: always
    command:
      - "--span-storage.type=elasticsearch"
      - "--es.server-urls=http://elasticsearch:9200"
      - "--es.tags-as-fields.all=true"
      - "--query.base-path=/jaeger"
      - "--query.ui-config=/etc/jaeger/ui-config.json"
    ports:
      - "16687:16686"  # Query UI (백업)
    volumes:
      - ./config/ui-config.json:/etc/jaeger/ui-config.json:ro
    networks:
      - tracing-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.54
    container_name: jaeger-collector
    restart: always
    command:
      - "--span-storage.type=elasticsearch"
      - "--es.server-urls=http://elasticsearch:9200"
      - "--es.tags-as-fields.all=true"
      - "--es.num-shards=1"
      - "--es.num-replicas=0"
      - "--collector.otlp.enabled=true"
      - "--collector.zipkin.host-port=:9411"
      - "--collector.grpc-server.host-port=:14250"
      - "--collector.http-server.host-port=:14268"
    ports:
      - "14269:14268"  # HTTP collector (백업)
      - "14251:14250"  # gRPC collector (백업)
      - "9412:9411"    # Zipkin collector (백업)
    networks:
      - tracing-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200

  # OTEL Collector (선택사항)
  otel-collector:
    image: otel/opentelemetry-collector:0.92.0
    container_name: otel-collector
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "13133:13133" # Health check
    networks:
      - tracing-net
    depends_on:
      - jaeger

volumes:
  jaeger_elasticsearch_data:

networks:
  tracing-net:
    driver: bridge