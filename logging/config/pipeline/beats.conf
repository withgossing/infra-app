# Beats 파이프라인 - Filebeat, Metricbeat 등에서 오는 데이터 처리
input {
  beats {
    port => 5044
    type => "beats"
  }
}

filter {
  # Filebeat에서 오는 로그 처리
  if [@metadata][beat] == "filebeat" {
    # 컨테이너 로그 처리
    if [container] {
      mutate {
        add_field => { "[@metadata][target_index]" => "filebeat-container-%{+YYYY.MM.dd}" }
      }
      
      # JSON 로그 파싱
      if [message] =~ /^\{.*\}$/ {
        json {
          source => "message"
          target => "json_log"
          tag_on_failure => ["_jsonparsefailure"]
        }
        
        if [json_log] {
          mutate {
            replace => { "message" => "%{[json_log][message]}" }
            add_field => { "level" => "%{[json_log][level]}" }
            add_field => { "logger" => "%{[json_log][logger]}" }
          }
        }
      }
    }
    
    # 시스템 로그 처리
    else {
      mutate {
        add_field => { "[@metadata][target_index]" => "filebeat-system-%{+YYYY.MM.dd}" }
      }
    }
  }

  # Metricbeat에서 오는 메트릭 처리
  if [@metadata][beat] == "metricbeat" {
    mutate {
      add_field => { "[@metadata][target_index]" => "metricbeat-%{+YYYY.MM.dd}" }
    }
  }

  # 공통 필드 정리
  mutate {
    remove_field => [ "@version", "ecs", "host", "agent" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][target_index]}"
    template_name => "beats"
    template_pattern => "filebeat-*,metricbeat-*"
    template => {
      "index_patterns" => ["filebeat-*", "metricbeat-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "30s"
      }
    }
  }
}