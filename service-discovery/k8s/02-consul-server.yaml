apiVersion: v1
kind: Service
metadata:
  name: consul-server
  namespace: consul
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
  ports:
    - name: http
      port: 8500
      targetPort: 8500
    - name: grpc
      port: 8502
      targetPort: 8502
    - name: grpc-tls
      port: 8503
      targetPort: 8503
    - name: server
      port: 8300
      targetPort: 8300
    - name: serf-lan-tcp
      port: 8301
      targetPort: 8301
      protocol: TCP
    - name: serf-lan-udp
      port: 8301
      targetPort: 8301
      protocol: UDP
    - name: serf-wan-tcp
      port: 8302
      targetPort: 8302
      protocol: TCP
    - name: serf-wan-udp
      port: 8302
      targetPort: 8302
      protocol: UDP
    - name: dns-tcp
      port: 8600
      targetPort: 8600
      protocol: TCP
    - name: dns-udp
      port: 8600
      targetPort: 8600
      protocol: UDP

---
apiVersion: v1
kind: Service
metadata:
  name: consul-ui
  namespace: consul
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: ui
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
  ports:
    - name: http
      port: 10500
      targetPort: 8500
      nodePort: 30500

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-server
  namespace: consul
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
spec:
  serviceName: consul-server
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: consul
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: consul
        app.kubernetes.io/component: server
      annotations:
        consul.hashicorp.com/connect-inject: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: consul
                  app.kubernetes.io/component: server
              topologyKey: kubernetes.io/hostname
      serviceAccountName: consul-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      containers:
        - name: consul
          image: consul:1.18.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8500
              name: http
              protocol: TCP
            - containerPort: 8502
              name: grpc
              protocol: TCP
            - containerPort: 8503
              name: grpc-tls
              protocol: TCP
            - containerPort: 8300
              name: server
              protocol: TCP
            - containerPort: 8301
              name: serf-lan-tcp
              protocol: TCP
            - containerPort: 8301
              name: serf-lan-udp
              protocol: UDP
            - containerPort: 8302
              name: serf-wan-tcp
              protocol: TCP
            - containerPort: 8302
              name: serf-wan-udp
              protocol: UDP
            - containerPort: 8600
              name: dns-tcp
              protocol: TCP
            - containerPort: 8600
              name: dns-udp
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="consul-server"
              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -config-file=/consul/config/consul-server.hcl \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect=3 \
                -client=0.0.0.0 \
                -datacenter=dc1 \
                -data-dir=/consul/data \
                -domain=cluster.local \
                -hcl="connect { enabled = true }" \
                -ui \
                -retry-join=${CONSUL_FULLNAME}-0.${CONSUL_FULLNAME}.${NAMESPACE}.svc.cluster.local \
                -retry-join=${CONSUL_FULLNAME}-1.${CONSUL_FULLNAME}.${NAMESPACE}.svc.cluster.local \
                -retry-join=${CONSUL_FULLNAME}-2.${CONSUL_FULLNAME}.${NAMESPACE}.svc.cluster.local \
                -server
          volumeMounts:
            - name: config
              mountPath: /consul/config
              readOnly: true
            - name: data
              mountPath: /consul/data
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - consul leave
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          configMap:
            name: consul-server-config
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: consul
          app.kubernetes.io/component: server
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-server
  namespace: consul
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-server
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups: [""]
    resources:
      - configmaps
    verbs:
      - create
      - update
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-server
  labels:
    app.kubernetes.io/name: consul
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-server
subjects:
  - kind: ServiceAccount
    name: consul-server
    namespace: consul
